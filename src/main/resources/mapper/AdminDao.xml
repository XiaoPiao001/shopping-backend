<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shoppingbackend.dao.AdminDao">

    <resultMap type="com.example.shoppingbackend.entity.Admin" id="AdminMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="adminName" column="admin_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.example.shoppingbackend.vo.AdminVO" id="AdminVO">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="adminName" column="admin_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <association property="roleVO" javaType="com.example.shoppingbackend.vo.RoleVO" column="id"
                     select="getRoleVOByAdmin"/>
    </resultMap>

    <resultMap type="com.example.shoppingbackend.vo.RoleVO" id="RoleVO">
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleDesc" column="role_desc" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <collection property="resourceList" ofType="com.example.shoppingbackend.entity.Resource">
            <result property="resourceId" column="resource_id" jdbcType="INTEGER"/>
            <result property="resourceCode" column="resource_code" jdbcType="VARCHAR"/>
            <result property="resourceName" column="resource_name" jdbcType="VARCHAR"/>
            <result property="resourceType" column="resource_type" jdbcType="VARCHAR"/>
            <result property="listHide" column="list_hide" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <resultMap type="com.example.shoppingbackend.entity.Resource" id="ResourceMap">
        <result property="resourceId" column="resource_id" jdbcType="INTEGER"/>
        <result property="resourceCode" column="resource_code" jdbcType="VARCHAR"/>
        <result property="resourceName" column="resource_name" jdbcType="VARCHAR"/>
        <result property="resourceType" column="resource_type" jdbcType="VARCHAR"/>
        <result property="listHide" column="list_hide" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getRoleVOByAdmin" parameterType="Integer"
            resultMap="RoleVO">
        select r.*, rs.*
        FROM admin_role ar
                 LEFT JOIN
             role r on ar.role_id = r.role_id
                 LEFT JOIN
             admin a on ar.admin_id = a.id
                 LEFT JOIN
             role_resource rrs on rrs.role_id = ar.role_id
                 LEFT JOIN
             resource rs on rrs.resource_id = rs.resource_id
        WHERE a.id = #{id}
    </select>

    <!--登录-->
    <select id="login" resultMap="AdminVO">
        SELECT *
        FROM admin
        where id = #{id}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="AdminMap">
        select id,
               admin_name,
               password
        from admin
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AdminMap">
        select
        id, admin_name, password
        from admin
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="adminName != null and adminName != ''">
                and admin_name = #{adminName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--查询指定行数据 不分页-->
    <select id="queryAll" resultMap="AdminMap">
        select
        id, admin_name, password
        from admin
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="adminName != null and adminName != ''">
                and admin_name = #{adminName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from admin
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="adminName != null and adminName != ''">
                and admin_name = #{adminName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into admin(admin_name, password)
        values (#{adminName}, #{password})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into admin(admin_name, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.adminName}, #{entity.password})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into admin(admin_name, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.adminName}, #{entity.password})
        </foreach>
        on duplicate key update
        admin_name = values(admin_name),
        password = values(password)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update admin
        <set>
            <if test="adminName != null and adminName != ''">
                admin_name = #{adminName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from admin
        where id = #{id}
    </delete>

</mapper>

